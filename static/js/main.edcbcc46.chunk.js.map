{"version":3,"sources":["Components/Filter/Filter.module.css","Components/NewContact/NewContact.module.css","Components/UserPhonebook/UserPhoneBook.module.css","Components/Section/Section.module.css","services/api.js","redux/actions.js","redux/reducer.js","redux/store.js","Components/Section/Section.jsx","Components/AddForm/AddForm.jsx","Components/NewContact/NewContact.jsx","Components/UserPhonebook/UserPhoneBook.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/AddForm/AddForm.module.css"],"names":["module","exports","url","addNewContact","a","data","fetch","method","headers","body","JSON","stringify","response","json","getAllContacts","result","deleteSelectedContact","id","getContacts","createAsyncThunk","addContact","name","number","deleteContact","changeFilter","createAction","items","createReducer","fulfilled","_","payload","state","meta","arg","filter","combineReducers","store","configureStore","reducer","contacts","contactReducer","devTools","process","Section","children","className","styles","wrapper","AddForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","onInputChange","value","target","checkEnteredName","normalizedName","toLowerCase","some","onSubmit","e","preventDefault","alert","uuidv4","onChange","input","placeholder","type","pattern","title","required","button","NewContact","item","onClick","UserPhoneBook","normalizedFilter","includes","getUserContacts","list","map","Filter","App","useEffect","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edcbcc46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__2P9qO\",\"input\":\"Filter_input__12QqW\",\"label-text\":\"Filter_label-text__2DY4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NewContact_item__1O21E\",\"button\":\"NewContact_button__3UPFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserPhoneBook_wrapper__3NhtB\",\"list\":\"UserPhoneBook_list__1rePs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Section_wrapper__gMIcl\"};","const url = 'http://localhost:4000/contacts';\r\n\r\nexport const addNewContact = async (data = {}) => {\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n    });\r\n    return await response.json();\r\n};\r\n\r\nexport const getAllContacts = async () => {\r\n    const response = await fetch(`${url}`);\r\n    const result = await response.json();\r\n    return result;\r\n};\r\n\r\nexport const deleteSelectedContact = async id => {\r\n    const response = await fetch(`${url}/${id}`, {\r\n        method: 'DELETE',\r\n    });\r\n    const result = await response.json();\r\n    return result;\r\n};\r\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n    addNewContact,\r\n    getAllContacts,\r\n    deleteSelectedContact,\r\n} from '../services/api';\r\n\r\nexport const getContacts = createAsyncThunk(\r\n    'phonebook/getContacts',\r\n    async () => await getAllContacts(),\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n    'phonebook/add',\r\n    async (name, number) => await addNewContact(name, number),\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n    'phonebook/delete',\r\n    async id => await deleteSelectedContact(id),\r\n);\r\nexport const changeFilter = createAction('phonebook/filter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n    addContact,\r\n    changeFilter,\r\n    deleteContact,\r\n    getContacts,\r\n} from './actions';\r\n\r\nconst items = createReducer([], {\r\n    [getContacts.fulfilled]: (_, { payload }) => [...payload],\r\n    [addContact.fulfilled]: (state, payload) => [...state, payload.meta.arg],\r\n    [deleteContact.fulfilled]: (state, payload) => [\r\n        ...state.filter(({ id }) => id !== payload.meta.arg),\r\n    ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './reducer';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: contactReducer,\r\n    },\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children }) => {\r\n    return <section className={styles.wrapper}>{children}</section>;\r\n};\r\n\r\nSection.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './AddForm.module.css';\r\n\r\nfunction AddForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    const contacts = useSelector(state => state.contacts.items);\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const onInputChange = value => {\r\n        if (value.target.name === 'name') setName(value.target.value);\r\n        if (value.target.name === 'number') setNumber(value.target.value);\r\n    };\r\n\r\n    const onUserSubmit = e => {\r\n        e.preventDefault();\r\n        if (checkEnteredName(name))\r\n            return alert(`${name} is already in your contacts`);\r\n        dispatch(addContact({ id: uuidv4(), name, number }));\r\n\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const checkEnteredName = name => {\r\n        const normalizedName = name.toLowerCase();\r\n        return contacts.some(\r\n            ({ name }) => name.toLowerCase() === normalizedName,\r\n        );\r\n    };\r\n\r\n    return (\r\n        <form className={styles['form-wrapper']} onSubmit={onUserSubmit}>\r\n            <label>\r\n                <span className={styles['label-text']}>First name:</span>\r\n                <input\r\n                    onChange={onInputChange}\r\n                    className={styles.input}\r\n                    placeholder=\"Ivanov Ivan\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label>\r\n                <span className={styles['label-text']}>Phone number:</span>\r\n                <input\r\n                    className={styles.input}\r\n                    placeholder=\"+7-999-999-99-99\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={onInputChange}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={styles.button}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onInputChange: PropTypes.func,\r\n    onUserSubmit: PropTypes.func,\r\n};\r\n\r\nexport default AddForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport styles from './NewContact.module.css';\r\n\r\nconst NewContact = ({ name, number, id }) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <li className={styles.item}>\r\n            {name}: {number}{' '}\r\n            <button\r\n                className={styles.button}\r\n                type=\"button\"\r\n                onClick={() => dispatch(deleteContact(id))}\r\n            >\r\n                Delete\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nNewContact.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n    onDelete: PropTypes.func,\r\n};\r\n\r\nexport default NewContact;\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport NewContact from '../NewContact';\r\nimport styles from './UserPhoneBook.module.css';\r\n\r\nconst UserPhoneBook = () => {\r\n    const getUserContacts = (items, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n\r\n        return items.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    };\r\n\r\n    const { items, filter } = useSelector(state => state.contacts);\r\n    const contacts = getUserContacts(items, filter);\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <h2>Your contacts</h2>\r\n            <ul className={styles.list}>\r\n                {contacts.map(({ id, name, number }) => (\r\n                    <NewContact key={id} name={name} number={number} id={id} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nUserPhoneBook.propTypes = {\r\n    // contact: PropTypes.arrayOf(PropTypes.object),\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDelete: PropTypes.func,\r\n};\r\n\r\nexport default UserPhoneBook;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeFilter } from '../../redux/actions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n    const value = useSelector(state => state.contacts.filter);\r\n    const dispatch = useDispatch();\r\n\r\n    const onFilterChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <label>\r\n                <span className={styles['label-text']}>Find contact:</span>\r\n                <input\r\n                    placeholder=\"Search contact\"\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={onFilterChange}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts } from './redux/actions';\nimport Section from './Components/Section';\nimport AddForm from './Components/AddForm';\nimport UserPhoneBook from './Components/UserPhonebook';\nimport Filter from './Components/Filter';\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    const { items } = useSelector(state => state.contacts);\n\n    useEffect(() => {\n        dispatch(getContacts());\n    }, []);\n\n    return (\n        <Section>\n            <AddForm />\n\n            {items.length > 0 ? (\n                <>\n                    <Filter />\n                    <UserPhoneBook />\n                </>\n            ) : (\n                <h2>There is no contacts</h2>\n            )}\n        </Section>\n    );\n}\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store.js';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-wrapper\":\"AddForm_form-wrapper__U2F1P\",\"input\":\"AddForm_input__Pv71o\",\"label-text\":\"AddForm_label-text__3KZDJ\",\"button\":\"AddForm_button__1k70g\"};"],"sourceRoot":""}